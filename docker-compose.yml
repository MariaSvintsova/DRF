#version: '3'
#services:
#  db:
#    image: postgres:16-alpine
#    restart: on_failure
#    environment:
#      POSTGRES_DB: drfhw
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: Msssvintsova006
#    volumes:
#      - pg_data:/var/lib/postgresql/data
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
#      interval: 10s
#      retries: 5
#      timeout: 5s
#
#  app:
#    build: .
#    tty: true
#    ports:
#      - "8000:8000"
#    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#    depends_on:
#      db:
#        condition: service_healthy
#    volumes:
#      - .:/app
#
#volumes:
#  pg_data:
version: '3'

services:
  redis:
    image: redis
    ports:
      - '${REDIS_PORT}:6379'

  postgreSQL:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data
    container_name: ${POSTGRES_HOST}
    ports:
      - '5404:${POSTGRES_PORT}'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    build: .
    tty: true
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/django
    ports:
      - '8000:8000'
    depends_on:
      - postgreSQL

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - django

  celery_beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - django

volumes:
  pg_data: